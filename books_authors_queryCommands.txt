(djangoPy3Env)
Ryan Middleton@11O11HAL900011O11 MINGW64 ~/CodingDojo/Python/python_stack/book_authors_proj 
$ python manage.py shell
Python 3.8.5 (tags/v3.8.5:580fbb0, Jul 20 2020, 15:43:08) [MSC v.1926 32 bit (Intel)] on win32
Type "help", "copyright", "credits" or "license" for more information.
(InteractiveConsole)
>>> from books_authors_app.models import Book, Author
>>> C_sharp_book = Book.objects.create(title="C Sharp")
>>> Java_book = Book.objects.create(title="Java")
>>> Python_book = Book.objects.create(title="Python")
>>> PHP_book = Book.objects.create(title="PHP")
>>> Ruby_book = Book.objects.create(title="Ruby")
>>> JaneAusten = Author.objects.create(first_name="Jane", last_name="Austen")
>>> EmilyDickenson = Author.objects.create(first_name="Emily", last_name="Dickenson")       
>>> FyodorDostoevsky = Author.objects.create(first_name="Fyodor", last_name="Dostoevsky")   
>>> WilliamShakeseare = Author.objects.create(first_name="William", last_name="Shakespeare")
>>> LauTzu = Author.objects.create(first_name="Lau", last_name="Tzu")
>>> ^Z^Z

now exiting InteractiveConsole...
(djangoPy3Env)
Ryan Middleton@11O11HAL900011O11 MINGW64 ~/CodingDojo/Python/python_stack/book_authors_proj 
$ python manage.py makemigrations
You are trying to add a non-nullable field 'notes' to author without a default; we can't do 
that (the database needs something to populate existing rows).
Please select a fix:
 1) Provide a one-off default now (will be set on all existing rows with a null value for this column)
 2) Quit, and let me add a default in models.py
Select an option: 1
Please enter the default value now, as valid Python
The datetime and django.utils.timezone modules are available, so you can do e.g. timezone.now
Type 'exit' to exit this prompt
>>> " "
Migrations for 'books_authors_app':
  books_authors_app\migrations\0002_author_notes.py
    - Add field notes to author
(djangoPy3Env)
Ryan Middleton@11O11HAL900011O11 MINGW64 ~/CodingDojo/Python/python_stack/book_authors_proj 
$ python manage.py makemigrations
No changes detected
(djangoPy3Env)
Ryan Middleton@11O11HAL900011O11 MINGW64 ~/CodingDojo/Python/python_stack/book_authors_proj 
$ python manage.py migrate
Operations to perform:
  Apply all migrations: admin, auth, books_authors_app, contenttypes, sessions
Running migrations:
  Applying books_authors_app.0002_author_notes... OK
(djangoPy3Env)
Ryan Middleton@11O11HAL900011O11 MINGW64 ~/CodingDojo/Python/python_stack/book_authors_proj 
$ python manage.py shell
Python 3.8.5 (tags/v3.8.5:580fbb0, Jul 20 2020, 15:43:08) [MSC v.1926 32 bit (Intel)] on win32
Type "help", "copyright", "credits" or "license" for more information.
(InteractiveConsole)
>>> CSharp_book = Book.objects.get(title="C Sharp") 
>>> CSharp_book.title = "C#"
>>> Author.objects.get(id=4).first_name = "Bill"
>>> book1 = Book.objects.get(id=1)
>>> book2 = Book.objects.get(id=2)
>>> author1 = Author.objects.get(id=1) 
>>> author1.books.add(book1)
>>> author1.books.add(book2)
>>> book3 = Book.objects.get(id=3)
>>> author2 = Author.objects.get(id=2) 
>>> author2.books.add(book1)
>>> author2.books.add(book2)
>>> author2.books.add(book3)
>>> book4 = Book.objects.get(id=4)
>>> author3 = Author.objects.get(id=3)
>>> author3.books.add(book1)
>>> author3.books.add(book2)
>>> author3.books.add(book3)
>>> author3.books.add(book4)
>>> book5 = Book.objects.get(id=5)
>>> author4 = Author.objects.get(id=4)
>>> author4.books.add(book1)
>>> author4.books.add(book2)
>>> author4.books.add(book3)
>>> author4.books.add(book4)
>>> author4.books.add(book5)
>>> authors_book3 = book3.authors.all()
>>> for author in authors_book3:
...     print(author.first_name, author.last_name)
... 
Emily Dickenson
Fyodor Dostoevsky
William Shakespeare
>>> print(book3.authors.all())
<QuerySet [<Author: Author object (2)>, <Author: Author object (3)>, <Author: Author object 
(4)>]>
>>> book3.authors.remove(author2)
>>> for author in authors_book3:
...     print(author.first_name, author.last_name)
...
Emily Dickenson
Fyodor Dostoevsky
William Shakespeare
>>> print(Author.objects.all())
<QuerySet [<Author: Author object (1)>, <Author: Author object (2)>, <Author: Author object r object (3)>, <Author: Author object (4)>, <Author: Author object (5)>]>
>>> author5 = Author.objects.get(id=5)
>>> book2.authors.add(author5)
>>> author3_books = author3.books.all()
>>> print(author3_books)
<QuerySet [<Book: Book object (1)>, <Book: Book object (2)>, <Book: Book object (3)>, <Book: Book object (4)>]>
>>> for book in author3_books:
...     print(book.title)
... 
C Sharp
Java
Python
PHP
>>> for author in book5.authors.all():
...     print(author.first_name, author.last_name)
... 
William Shakespeare
>>> 